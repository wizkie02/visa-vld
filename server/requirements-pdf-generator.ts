import jsPDF from 'jspdf';
import type { ComprehensiveVisaRequirements } from './visa-requirements-service';

export function generateRequirementsChecklistPDF(requirements: ComprehensiveVisaRequirements): Buffer {
  const doc = new jsPDF('p', 'mm', 'a4');
  const pageWidth = doc.internal.pageSize.getWidth();
  const margin = 20;
  let yPosition = 30;

  // Helper function to add text with word wrapping
  function addText(text: string, fontSize: number = 10, isBold: boolean = false) {
    doc.setFontSize(fontSize);
    if (isBold) {
      doc.setFont('helvetica', 'bold');
    } else {
      doc.setFont('helvetica', 'normal');
    }
    
    const lines = doc.splitTextToSize(text, pageWidth - 2 * margin);
    doc.text(lines, margin, yPosition);
    yPosition += lines.length * (fontSize * 0.4) + 5;
    
    // Check if we need a new page
    if (yPosition > 270) {
      doc.addPage();
      yPosition = 30;
    }
  }

  // Header with logo placeholder
  doc.setFillColor(28, 68, 115); // Brand color #1C4473
  doc.rect(0, 0, pageWidth, 25, 'F');
  
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('VISA VALIDATOR', margin, 15);
  
  doc.setTextColor(0, 0, 0);
  yPosition = 35;

  // Title
  addText(`VISA REQUIREMENTS CHECKLIST`, 18, true);
  addText(`${requirements.country.toUpperCase()} - ${requirements.visaType.toUpperCase()}`, 14, true);
  addText(`Last Updated: ${requirements.lastUpdated}`, 10);
  yPosition += 10;

  // General Information
  addText('GENERAL INFORMATION', 14, true);
  addText(`Processing Time: ${requirements.generalInfo.processingTime}`);
  addText(`Validity: ${requirements.generalInfo.validity}`);
  addText(`Fees: ${requirements.generalInfo.fees}`);
  addText(`Application Methods: ${requirements.generalInfo.applicationMethods.join(', ')}`);
  yPosition += 10;

  // Important Notes
  if (requirements.importantNotes?.length > 0) {
    addText('IMPORTANT NOTES', 14, true);
    requirements.importantNotes.forEach((note, index) => {
      addText(`${index + 1}. ${note}`);
    });
    yPosition += 10;
  }

  // Requirements by Category
  const categories = [
    { key: 'document', title: 'DOCUMENT REQUIREMENTS' },
    { key: 'financial', title: 'FINANCIAL REQUIREMENTS' },
    { key: 'personal', title: 'PERSONAL REQUIREMENTS' },
    { key: 'travel', title: 'TRAVEL REQUIREMENTS' },
    { key: 'health', title: 'HEALTH REQUIREMENTS' }
  ];

  categories.forEach(category => {
    const categoryReqs = requirements.requirements.filter(req => req.category === category.key);
    if (categoryReqs.length > 0) {
      addText(category.title, 14, true);
      categoryReqs.forEach((req, index) => {
        const status = req.required ? '☐ REQUIRED' : '☐ OPTIONAL';
        addText(`${status}: ${req.title}`, 10, true);
        addText(`   ${req.description}`);
        if (req.specificNotes?.length) {
          req.specificNotes.forEach(note => {
            addText(`   • ${note}`, 9);
          });
        }
        yPosition += 3;
      });
      yPosition += 8;
    }
  });

  // Recent Changes
  if (requirements.recentChanges?.length) {
    addText('RECENT CHANGES', 14, true);
    requirements.recentChanges.forEach((change, index) => {
      addText(`${index + 1}. ${change}`);
    });
    yPosition += 10;
  }

  // Official Sources
  if (requirements.officialSources?.length > 0) {
    addText('OFFICIAL SOURCES', 14, true);
    requirements.officialSources.forEach((source, index) => {
      addText(`${index + 1}. ${source}`);
    });
  }

  // Footer
  const finalY = Math.max(yPosition + 20, 270);
  doc.setFontSize(8);
  doc.setTextColor(128, 128, 128);
  doc.text('Generated by Visa Validator - Professional Visa Documentation Service', margin, finalY);
  doc.text(`Report generated on ${new Date().toLocaleDateString()}`, margin, finalY + 5);

  return Buffer.from(doc.output('arraybuffer'));
}